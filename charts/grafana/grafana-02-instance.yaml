apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: grafana-deployment
  annotations:
    description: Template to deploy a Grafana deployment on OCP.
    tags: grafana,community,operator
    iconClass: icon-cassandra
    openshift.io/provider-display-name: Red Hat, Inc.
    openshift.io/support-url: https://access.redhat.com
objects:
- apiVersion: v1
  kind: Secret
  metadata:
    name: grafana-k8s-proxy
    namespace: ${OPERATOR_NAMESPACE}
  data:
    session_secret: Y2hhbmdlIG1lCg==
  type: Opaque
- apiVersion: v1
  kind: ConfigMap
  metadata:
    labels:
      config.openshift.io/inject-trusted-cabundle: "true"
    name: ocp-injected-certs
    namespace: ${OPERATOR_NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    name: grafana-proxy
    namespace: ${OPERATOR_NAMESPACE}
  rules:
    - apiGroups:
        - authentication.k8s.io
      resources:
        - tokenreviews
      verbs:
        - create
    - apiGroups:
        - authorization.k8s.io
      resources:
        - subjectaccessreviews
      verbs:
        - create
- apiVersion: authorization.openshift.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: grafana-proxy
    namespace: ${OPERATOR_NAMESPACE}
  roleRef:
    name: grafana-proxy
  subjects:
    - kind: ServiceAccount
      name: grafana-serviceaccount
      namespace: ${OPERATOR_NAMESPACE}
  userNames:
    - "system:serviceaccount:${OPERATOR_NAMESPACE}:grafana-serviceaccount"
- apiVersion: integreatly.org/v1alpha1
  kind: Grafana
  metadata:
    name: grafana-oauth
    namespace: ${OPERATOR_NAMESPACE}
    labels:
      app: grafana
  spec:
    config:
      log:
        mode: "console"
        level: "warn"
      auth:
        disable_login_form: False
        disable_signout_menu: True
      auth.basic:
        enabled: True
      auth.anonymous:
        enabled: True
      security:
        admin_password: admin
        admin_user: admin
    deployment:
      envFrom:
        - secretRef:
            name: grafana-env
    containers:
      - args:
          - '-provider=openshift'
          - '-pass-basic-auth=false'
          - '-https-address=:9091'
          - '-http-address='
          - '-email-domain=*'
          - '-upstream=http://localhost:3000'
          - '-openshift-sar={"resource": "namespaces", "verb": "get"}'
          - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"}}'
          - '-tls-cert=/etc/tls/private/tls.crt'
          - '-tls-key=/etc/tls/private/tls.key'
          - '-client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token'
          - '-cookie-secret-file=/etc/proxy/secrets/session_secret'
          - '-openshift-service-account=grafana-serviceaccount'
          - '-openshift-ca=/etc/pki/tls/cert.pem'
          - '-openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
          - '-openshift-ca=/etc/grafana-configmaps/ocp-injected-certs/ca-bundle.crt'
          - '-skip-auth-regex=^/metrics'
        image: 'quay.io/openshift/origin-oauth-proxy:4.6'
        name: grafana-proxy
        ports:
          - containerPort: 9091
            name: grafana-proxy
        resources: {}
        volumeMounts:
          - mountPath: /etc/tls/private
            name: secret-grafana-k8s-tls
            readOnly: false
          - mountPath: /etc/proxy/secrets
            name: secret-grafana-k8s-proxy
            readOnly: false
    secrets:
      - grafana-k8s-tls
      - grafana-k8s-proxy
    configMaps:
      - ocp-injected-certs
    service:
      ports:
        - name: grafana-proxy
          port: 9091
          protocol: TCP
          targetPort: grafana-proxy
      annotations:
        service.alpha.openshift.io/serving-cert-secret-name: grafana-k8s-tls
    ingress:
      enabled: True
      labels:
        app: grafana
      targetPort: grafana-proxy
      termination: reencrypt
    client:
      preferService: True
    serviceAccount:
      annotations:
        serviceaccounts.openshift.io/oauth-redirectreference.primary: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"grafana-route"}}'
    dashboardLabelSelector:
      - matchExpressions:
          - key: "app"
            operator: In
            values: 
              - grafana
- apiVersion: v1
  kind: Secret
  metadata:
    name: grafana-env
    namespace: ${OPERATOR_NAMESPACE}
  stringData:
    GF_INSTALL_PLUGINS: https://hopu.eu/wp-content/grafana/orion-datasource-0.4.6.zip;orion-datasource
parameters:
- name: OPERATOR_NAMESPACE
  description: "The project where the operator will be installed."
  required: false
  value: "grafana"