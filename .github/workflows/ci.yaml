name: Create namespace and deploy on new branch

on:
  create:
    branches:
      - 'feature-**'
  push:
    branches:
      - 'feature-**'

jobs:

  create:

    runs-on: ubuntu-latest
    steps:

      - name: Git checkout
        uses: actions/checkout@v1

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1

        with:
          # URL to your OpenShift cluster.
          # Refer to Step 2.
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}

          # Authentication Token. Can use username and password instead.
          # Refer to Step 3.
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}

          # Disables SSL cert checking. Use this if you don't have the certificate authority data.
          insecure_skip_tls_verify: true

      # extract the current branch name and provide it as a var for easier integration into sed-commands
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.2

      - name: Log the branch name
        run: |
          echo ${{ steps.branch-name.outputs.current_branch }}

      - name: Create namespace
        if: ${{ github.event_name == 'create' }}
        run: |
          oc new-project ${{ steps.branch-name.outputs.current_branch }}
          oc adm policy add-role-to-group cluster-admin lodestar-developers -n ${{ steps.branch-name.outputs.current_branch }}

      - name: Rename target branch
        run: |
          cd fiware-platform/
          # replace the default destination namespace(demo) with the branch namespace
          sed -i'' -e 's/destination_namespace: \&destination demo/destination_namespace: \&destination ${{ steps.branch-name.outputs.current_branch }}/g' values.yaml
          # prefix the application name with the branch name to avoid collisions
          sed -i'' -e 's/release: demo/release: ${{ steps.branch-name.outputs.current_branch }}/g' values.yaml
          # set the target revision to the current branch
          sed -i'' -e 's/branch: \&branch main/branch: \&branch ${{ steps.branch-name.outputs.current_branch }}/g' values.yaml

      # See https://github.com/helm/chart-releaser-action/issues/6
      - name: Install Helm
        run: |
          curl -fsSLo get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Deploy applications
        run: |
          cd fiware-platform/
          # render app of apps and apply it
          helm template . | oc -n labs-ci-cd apply -f -

